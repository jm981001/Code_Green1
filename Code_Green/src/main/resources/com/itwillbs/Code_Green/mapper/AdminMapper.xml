<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itwillbs.Code_Green.mapper.AdminMapper">

	<!-- 로그인 -->
	<select id="loginAdmin" resultType="com.itwillbs.Code_Green.vo.AdminVO">
		SELECT * FROM admin
		WHERE ADMIN_ID=#{admin_id} AND ADMIN_PASS=#{admin_pass}
	</select>
	
	<!-- 총매출,순수익(10%) -->
	<select id="selectTotalMoney" resultType="com.itwillbs.Code_Green.vo.SellVO">
		SELECT SUM(sell_total_price) AS total
			,  SUM(sell_total_price) * 0.1 AS net
		  FROM sell
	</select>
	<!-- 주문건수 -->
	<select id="selectTotalsellCount" resultType="Integer">
		SELECT COUNT(*)
		  FROM sell
	</select>
	<!-- 취소건수 -->
	<select id="selectCancelCount" resultType="Integer">
		SELECT
			COUNT(sell_status)
			FROM
				sell
			WHERE
				sell_status ='주문취소';
	</select>
	
	<!-- 매출 3순위 -->
	<select id="selectTopSaleList" resultType="com.itwillbs.Code_Green.vo.ManagerVO">
		SELECT	m.manager_brandname
		 	,	SUM(sd.sell_amount)   AS sellCount
		 	,	COUNT(sd.sell_amount) AS orderCount
		 	,	IFNULL(f.brand_follower, 0) AS brand_follower
		 	,	SUM(i.item_price * sd.sell_amount) AS brandtotal
		  FROM
				manager m
		  LEFT JOIN
				(SELECT rf_manager_idx, COUNT(*) AS brand_follower FROM follow GROUP BY rf_manager_idx) AS f 
			ON
				m.manager_idx = f.rf_manager_idx
		  LEFT JOIN
				item i
			ON
				i.re_manager_idx = m.manager_idx
		 INNER JOIN
				sell_detail sd
			ON
				i.item_idx = sd.rf_item_idx
		 GROUP BY
				m.manager_idx
		 ORDER BY
				brandTotal DESC
		 LIMIT 3;
	</select>
	
	<!-- 매출 랭킹 -->
	<select id="selectRanking" resultType="com.itwillbs.Code_Green.vo.ManagerVO">
		SELECT	m.manager_brandname
			,	SUM(sd.sell_amount)   AS sellCount
			,	COUNT(sd.sell_amount) AS orderCount
			,	IFNULL(f.brand_follower, 0) AS brand_follower
			,	SUM(i.item_price * sd.sell_amount) AS brandtotal
		  FROM
				manager m
		  LEFT JOIN
				(SELECT rf_manager_idx, COUNT(*) AS brand_follower FROM follow GROUP BY rf_manager_idx) AS f 
			ON
				m.manager_idx = f.rf_manager_idx
		  LEFT JOIN
				item i
			ON
				i.re_manager_idx = m.manager_idx
		 INNER JOIN
				sell_detail sd
			ON
				i.item_idx = sd.rf_item_idx
		 GROUP BY
				m.manager_idx
		 ORDER BY
				brandTotal DESC;
	</select>
	
	<!-- 기업 별점 순위 -->
	<select id="selectStarRankingList" resultType="com.itwillbs.Code_Green.vo.ManagerVO">
		SELECT
			m.manager_brandname,
		    IFNULL(f.brand_follower, 0) AS brand_follower,
		    SUM(sd.sell_amount) AS sellCount,
		    COUNT(sd.sell_amount) AS orderCount,
		    truncate(bs.board_star_score,1) AS star_score,
		    SUM(i.item_price * sd.sell_amount) AS brandtotal
		FROM
			manager m
		LEFT JOIN
				(SELECT
						rf_manager_idx,
				 		COUNT(*) AS brand_follower
				 FROM
				 		follow
				 GROUP BY
				 		rf_manager_idx)
				 AS 	f 
		ON
			m.manager_idx = f.rf_manager_idx
		LEFT JOIN
			item i
		ON
			i.re_manager_idx = m.manager_idx
		LEFT JOIN
			sell_detail sd
		ON
			i.item_idx = sd.rf_item_idx
		LEFT JOIN
			board b
		ON
			b.board_item_idx = i.item_idx
		INNER JOIN
				(SELECT
						b.board_item_idx,
						s.rf_board_idx,
						AVG(s.board_star_score) AS board_star_score
				 FROM
						board b
				 JOIN
						board_star s
				 ON
						b.board_idx = s.rf_board_idx
				 GROUP BY
						b.board_item_idx)
				 AS 	bs
		ON
			bs.rf_board_idx = b.board_idx
		GROUP BY
			m.manager_idx
		ORDER BY
			star_score DESC;
	</select>
	
	<!-- 기업 팔로워 순위 -->
	<select id="selectFollowerRankingList" resultType="com.itwillbs.Code_Green.vo.ManagerVO">
		SELECT
			m.manager_brandname,
		    IFNULL(f.brand_follower, 0) AS brand_follower,
		    SUM(sd.sell_amount) AS sellCount,
		    COUNT(sd.sell_amount) AS orderCount,
		    ROUND(bs.board_star_score,1) AS star_score,
		    SUM(i.item_price * sd.sell_amount) AS brandtotal
		FROM
			manager m
		LEFT JOIN
				(SELECT
						rf_manager_idx,
				 		COUNT(*) AS brand_follower
				 FROM
				 		follow
				 GROUP BY
				 		rf_manager_idx)
				 AS 	f 
		ON
			m.manager_idx = f.rf_manager_idx
		LEFT JOIN
			item i
		ON
			i.re_manager_idx = m.manager_idx
		LEFT JOIN
			sell_detail sd
		ON
			i.item_idx = sd.rf_item_idx
		LEFT JOIN
			board b
		ON
			b.board_item_idx = i.item_idx
		INNER JOIN
				(SELECT
						b.board_item_idx,
						s.rf_board_idx,
						AVG(s.board_star_score) AS board_star_score
				 FROM
						board b
				 JOIN
						board_star s
				 ON
						b.board_idx = s.rf_board_idx
				 GROUP BY
						b.board_item_idx)
				 AS 	bs
		ON
			bs.rf_board_idx = b.board_idx
		GROUP BY
			m.manager_idx
		ORDER BY
			brand_follower DESC;
	</select>
	
<!-- ==결제취소요청====결제취소요청====결제취소요청====결제취소요청====결제취소요청====결제취소요청====결제취소요청====결제취소요청====결제취소요청====결제취소요청====-->
	
	<!-- 결제취소요청 목록 -->
	<select id="selectCancelRequestList" resultType="com.itwillbs.Code_Green.vo.SellVO">
		SELECT 
				m.member_id
			,	s.sell_idx
		    ,	s.sell_total_price
		    ,	s.sell_cancel_status
		    ,	s.sell_pay_status
		    ,	s.sell_pay_date
		    ,	s.sell_order_number
		 FROM	sell s 
		 LEFT JOIN member m
		   ON	s.rf_member_idx = m.member_idx
		WHERE	s.sell_cancel_status = '취소요청';
	</select>
	
	<!-- 결제취소승인 목록 -->
	<select id="selectCancelSuccessList" resultType="com.itwillbs.Code_Green.vo.SellVO">
		SELECT 
				m.member_id
			,	s.sell_idx
		    ,	s.sell_total_price
		    ,	s.sell_cancel_status
		    ,	s.sell_pay_status
		    ,	s.sell_pay_date
		    ,	s.sell_order_number
		 FROM	sell s 
		 LEFT JOIN member m
		   ON	s.rf_member_idx = m.member_idx
		WHERE	s.sell_cancel_status = '취소승인' AND s.sell_pay_status = '결제취소'
	</select>
	
	
	<!-- 결제취소 승인 -->
	<update id="updateStatusApproval">
		UPDATE 		sell s 
		  LEFT JOIN sell_detail sd 
		    ON		s.sell_idx = sd.rf_sell_idx
		   SET 		s.sell_cancel_status 	  =	'취소승인'
		   	   ,	s.sell_pay_status = '결제취소'
		   	   ,	s.sell_status = '주문취소'
		   	   ,	sd.sell_del_yn ='Y'
		 WHERE
		 			s.sell_idx = #{sell_idx};
	</update>
	



<!-- 아래부터 페이지 기능 -->


	<!-- 전체 회원 목록 갯수 조회(검색 기능 추가) -->
	<select id="selectMemberListCount" resultType="integer">
		SELECT 
			COUNT(*) 
			FROM member
			<!-- choose, when, otherwise 태그를 사용하여 복수개의 조건 판별(if ~ else if 문 구조) -->
			<!-- 1. 검색어(keyword)가 널스트링이 아닐 때 검색 수행 -->
			<if test="!keyword.equals('')">
				<!-- 2. 검색타입(search)에 따른 WHERE 변경 -->
				<choose>
					<when test="searchType.equals('id')">
						WHERE member_id LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('name')">
						WHERE member_name LIKE '%${keyword}%' 
					</when>
					<when test="searchType.equals('email')">
						WHERE member_email LIKE '%${keyword}%'
					</when>
				</choose>
			</if>

	</select>

	<!-- 전체 회원 목록 조회 -->
	<select id="selectMemberList" resultType="com.itwillbs.Code_Green.vo.MemberVO">
		SELECT *
			FROM 
				member
			WHERE
				member_del_yn='N'
		<if test="!keyword.equals('')">
				<!-- 2. 검색타입(search)에 따른 WHERE 변경 -->
				<choose>
					<when test="searchType.equals('id')">
						AND member_id LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('name')">
						AND member_name LIKE '%${keyword}%' 
					</when>
					<when test="searchType.equals('email')">
						AND member_email LIKE '%${keyword}%'
					</when>
				</choose>
			</if>
		ORDER BY member_idx DESC
		LIMIT #{startRow}, #{listLimit}
	</select>
	
	<!--회원 상세 정보 조회 -->
	<select id="selectMemberInfo" resultType="com.itwillbs.Code_Green.vo.MemberVO">
		SELECT * FROM member
		WHERE 
			MEMBER_ID=#{member_id}
	</select>
	
	<!--회원 정보 수정 -->
	<update id="updateMemberInfo">
		UPDATE member
		SET 
			member_name = #{newName}
		WHERE 
			member_id = #{id}
	</update>

	
	<!--회원 삭제(영구삭제X) 탈퇴로 간주해 로그인X, 가입시 중복아이디로 가입불가능-->
	<update id="deleteMember">
		UPDATE member
		SET
			member_del_yn = 'Y'
		WHERE
			member_id = #{id}
	</update>




<!-- ==기업 관리====기업 관리====기업 관리====기업 관리====기업 관리====기업 관리====기업 관리====기업 관리====기업 관리====기업 관리====기업 관리====기업 관리====기업 관리====기업 관리==-->




	<!-- 기업체 목록 갯수 조회( 승인완료 | 검색기능 추가) -->
	<select id="selectManagerListCount" resultType="integer">
		SELECT 
			COUNT(*) 
		FROM
			manager
		WHERE
			manager_adminauth='Y' AND manager_del_yn='N'
			<!-- choose, when, otherwise 태그를 사용하여 복수개의 조건 판별(if ~ else if 문 구조) -->
			<!-- 1. 검색어(keyword)가 널스트링이 아닐 때 검색 수행 -->
			<if test="!keyword.equals('')">
				<!-- 2. 검색타입(search)에 따른 WHERE 변경 -->
				<choose>
					<when test="searchType.equals('brandName')">
						AND manager_brandname LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('name')">
						AND manager_name LIKE '%${keyword}%' 
					</when>
					<when test="searchType.equals('id')">
						AND manager_id LIKE '%${keyword}%'
					</when>
				</choose>
			</if>
	</select>


	<!--기업체 목록 조회(승인완료) -->
	<select id="selectManagerList" resultType="com.itwillbs.Code_Green.vo.ManagerVO">
		SELECT * 
		FROM
			manager
		WHERE
			manager_adminauth='Y' AND manager_del_yn ='N'
		<if test="!keyword.equals('')">
			<!-- 2. 검색타입(search)에 따른 WHERE 변경 -->
			<choose>
				<when test="searchType.equals('brandName')">
					AND manager_brandname LIKE '%${keyword}%'
				</when>
				<when test="searchType.equals('name')">
					AND manager_name LIKE '%${keyword}%' 
				</when>
				<when test="searchType.equals('id')">
					AND manager_id LIKE '%${keyword}%'
				</when>
			</choose>
		</if>
		ORDER BY manager_idx DESC
		LIMIT #{startRow}, #{listLimit}
	</select>
	
	
	<!-- 기업체 목록 갯수 조회( 미승인 | 검색기능 추가) -->
	<select id="selectAuthListCount" resultType="integer">
		SELECT 
			COUNT(*) 
		FROM
			manager
		WHERE
			manager_adminauth='N' AND manager_del_yn='N'
			<!-- choose, when, otherwise 태그를 사용하여 복수개의 조건 판별(if ~ else if 문 구조) -->
			<!-- 1. 검색어(keyword)가 널스트링이 아닐 때 검색 수행 -->
			<if test="!keyword.equals('')">
				<!-- 2. 검색타입(search)에 따른 WHERE 변경 -->
				<choose>
					<when test="searchType.equals('brandName')">
						AND manager_brandname LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('name')">
						AND manager_name LIKE '%${keyword}%' 
					</when>
					<when test="searchType.equals('id')">
						AND manager_id LIKE '%${keyword}%'
					</when>
				</choose>
			</if>
	</select>
	
	
	<!--기업체 목록 조회(미승인) -->
	<select id="selectManagerAuthList" resultType="com.itwillbs.Code_Green.vo.ManagerVO">
		SELECT *
			FROM
				manager
			WHERE
				manager_adminauth='N' AND manager_del_yn ='N'
		<if test="!keyword.equals('')">
			<!-- 2. 검색타입(search)에 따른 WHERE 변경 -->
			<choose>
				<when test="searchType.equals('brandName')">
					AND manager_brandname LIKE '%${keyword}%'
				</when>
				<when test="searchType.equals('name')">
					AND manager_name LIKE '%${keyword}%' 
				</when>
				<when test="searchType.equals('id')">
					AND manager_id LIKE '%${keyword}%'
				</when>
			</choose>
		</if>
		ORDER BY manager_idx DESC
		LIMIT #{startRow}, #{listLimit}
	</select>


	<!--기업 상세 정보 조회 -->
	<select id="selectManagerInfo" resultType="com.itwillbs.Code_Green.vo.ManagerVO">
		SELECT *
		FROM
			manager
		WHERE
			manager_id = #{manager_id } 
	</select>

	<!--기업 가입 승인 -->
	<update id="updateAdminAuth">
		UPDATE manager
		SET 
			manager_adminauth="Y"
		WHERE
			manager_id=#{manager_id}
	</update>

	<!--기업 삭제(영구삭제X) -->
	<update id="deleteManager">
		UPDATE 	manager
		   SET
		   	manager_del_yn = 'Y'
		 WHERE
		 	manager_id =#{manager_id}
	</update>




<!-- ==문의(1:1문의 | 상품문의) 관리====문의(1:1문의 | 상품문의) 관리====문의(1:1문의 | 상품문의) 관리====문의(1:1문의 | 상품문의) 관리====문의(1:1문의 | 상품문의) 관리== -->


	<!--1:1 문의글 갯수 조회 -->
	<select id="selectOneListCount" resultType="integer">
		SELECT COUNT(*)
		  FROM qna
		 WHERE qna_type='1:1문의' AND qna_status='답변대기'
			<if test="!keyword.equals('')">
				<!-- 2. 검색타입(search)에 따른 WHERE 변경 -->
				<choose>
					<when test="searchType.equals('category1')">
						AND qna_category='배송문의' AND qna_subject LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('category2')">
						AND qna_category='주문/결제/반품/교환문의' AND qna_subject LIKE '%${keyword}%' 
					</when>
					<when test="searchType.equals('category3')">
						AND qna_category='상품문의' AND qna_subject LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('category4')">
						AND qna_category='기타문의' AND qna_subject LIKE '%${keyword}%'
					</when>
				</choose>
			</if>
	</select>


	<!--1:1 문의글 목록 조회 -->
	<select id="selectOneQnaList" resultType="com.itwillbs.Code_Green.vo.QnaVO">
		SELECT *
		  FROM qna
		 WHERE qna_type='1:1문의' AND qna_status='답변대기'
			<if test="!keyword.equals('')">
			<!-- 2. 검색타입(search)에 따른 WHERE 변경 -->
			<choose>
				<when test="searchType.equals('category1')">
					AND qna_category='배송문의' AND qna_subject LIKE '%${keyword}%'
				</when>
				<when test="searchType.equals('category2')">
					AND qna_category='주문/결제/반품/교환문의' AND qna_subject LIKE '%${keyword}%' 
				</when>
				<when test="searchType.equals('category3')">
					AND qna_category='상품문의' AND qna_subject LIKE '%${keyword}%'
				</when>
				<when test="searchType.equals('category4')">
					AND qna_category='이벤트/쿠폰/적립금문의' AND qna_subject LIKE '%${keyword}%'
				</when>
				<when test="searchType.equals('category5')">
					AND qna_category='기타 문의' AND qna_subject LIKE '%${keyword}%'
				</when>
			</choose>
		</if>
		ORDER BY qna_idx DESC
		LIMIT #{startRow}, #{listLimit}
	</select>
	
	<!-- 1:1문의 답변 등록 -->	
	<update id="updateAnswer">
		UPDATE qna
		   SET
		   	qna_answer=#{qna_answer }
		 WHERE
		 	qna_idx=#{qna_idx }
	</update>
	
	<!-- 1:1문의 답변상태 처리 -->
	<update id="updateQnaStatus">
		UPDATE qna
		   SET qna_status='답변완료'
		 WHERE qna_idx=#{qna_idx }
	</update>
	
	
	<!--1:1문의(답변완료) 갯수 조회 -->
	<select id="selectOneAnswerListCount" resultType="integer">
		SELECT COUNT(*)
		  FROM qna
		 WHERE qna_type='1:1문의' AND qna_status='답변완료'
			<if test="!keyword.equals('')">
				<!-- 2. 검색타입(search)에 따른 WHERE 변경 -->
				<choose>
					<when test="searchType.equals('category1')">
						AND qna_category='배송문의' AND qna_subject LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('category2')">
						AND qna_category='주문/결제/반품/교환문의' AND qna_subject LIKE '%${keyword}%' 
					</when>
					<when test="searchType.equals('category3')">
						AND qna_category='상품문의' AND qna_subject LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('category4')">
						AND qna_category='기타문의' AND qna_subject LIKE '%${keyword}%'
					</when>
				</choose>
			</if>
	</select>
	
	<!--1:1문의(답변완료) 목록 조회 -->
	<select id="selectOneQnaAnswerList" resultType="com.itwillbs.Code_Green.vo.QnaVO">
		SELECT * 
		  FROM qna
		 WHERE qna_type='1:1문의' AND qna_status='답변완료'
			<if test="!keyword.equals('')">
			<!-- 2. 검색타입(search)에 따른 WHERE 변경 -->
			<choose>
				<when test="searchType.equals('category1')">
					AND qna_category='배송문의' AND qna_subject LIKE '%${keyword}%'
				</when>
				<when test="searchType.equals('category2')">
					AND qna_category='주문/결제/반품/교환문의' AND qna_subject LIKE '%${keyword}%' 
				</when>
				<when test="searchType.equals('category3')">
					AND qna_category='상품문의' AND qna_subject LIKE '%${keyword}%'
				</when>
				<when test="searchType.equals('category4')">
					AND qna_category='이벤트/쿠폰/적립금문의' AND qna_subject LIKE '%${keyword}%'
				</when>
				<when test="searchType.equals('category5')">
					AND qna_category='기타 문의' AND qna_subject LIKE '%${keyword}%'
				</when>
			</choose>
		</if>
		ORDER BY qna_idx DESC
		LIMIT #{startRow}, #{listLimit}
	</select>

	<!--1:1 문의글 상세 조회 -->
	<select id="selectOneQnaInFo" resultType="com.itwillbs.Code_Green.vo.QnaVO">
		SELECT * 
		  FROM qna
		 WHERE qna_idx=#{qna_idx} AND qna_id=#{id}
	</select>

	<!--1:1 문의글 삭제 -->
	<delete id="deleteOneQnaBoard">
		DELETE 
		  FROM qna
		 WHERE qna_idx=#{idx} AND qna_id=#{id}
	</delete>
	
	
	
<!-- ==게시판(커뮤니티,후기,레시피) 관리====게시판(커뮤니티,후기,레시피) 관리====게시판(커뮤니티,후기,레시피) 관리====게시판(커뮤니티,후기,레시피) 관리====게시판(커뮤니티,후기,레시피) 관리==-->
	
	
	
	
	
	<!-- 커뮤니티 게시글 갯수  -->
	<select id="selectBoardListCount" resultType="Integer">
		SELECT COUNT(*) 
		  FROM board
		 WHERE board_type='커뮤'
			<!-- choose, when, otherwise 태그를 사용하여 복수개의 조건 판별(if ~ else if 문 구조) -->
			<!-- 1. 검색어(keyword)가 널스트링이 아닐 때 검색 수행 -->
			<if test="!keyword.equals('')">
				<!-- 2. 검색타입(search)에 따른 WHERE 변경 -->
				<choose>
					<when test="searchType.equals('info')">
						AND board_category='정보' AND board_subject LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('tasty')">
						AND board_category='맛집' AND board_subject LIKE '%${keyword}%' 
					</when>
					<when test="searchType.equals('talk')">
						AND board_category='사담' AND board_subject LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('review')">
						AND board_category='후기' AND board_subject LIKE '%${keyword}%'
					</when>
				</choose>
			</if>
	</select>
	
	
	<!-- 커뮤니티 게시글 목록 -->
	<select id="selectBoardList" resultType="com.itwillbs.Code_Green.vo.BoardVO">
		SELECT * 
		  FROM board
		 WHERE board_type='커뮤'
				<if test="!keyword.equals('')">
				<!-- 2. 검색타입(search)에 따른 WHERE 변경 -->
				<choose>
					<when test="searchType.equals('info')">
						AND board_category='정보' AND board_subject LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('tasty')">
						AND board_category='맛집' AND board_subject LIKE '%${keyword}%' 
					</when>
					<when test="searchType.equals('talk')">
						AND board_category='사담' AND board_subject LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('review')">
						AND board_category='후기' AND board_subject LIKE '%${keyword}%'
					</when>
				</choose>
			</if>
		ORDER BY board_idx DESC
		LIMIT #{startRow}, #{listLimit}
	</select>
	
	<!-- 커뮤니티 게시글 상세 조회  -->
	<select id="selectCommuDetail" resultType="com.itwillbs.Code_Green.vo.BoardVO">
		SELECT * 
		  FROM board b 
		  LEFT JOIN file_board f
			ON b.board_idx = f.rf_board_idx
		 WHERE b.board_idx=#{board_idx};
	</select>
	
	
	
	
	<!-- 후기 게시글 갯수  -->
	<select id="selectReviewListCount" resultType="Integer">
		SELECT COUNT(*) 
		  FROM board
		 WHERE board_type='후기'
			<!-- choose, when, otherwise 태그를 사용하여 복수개의 조건 판별(if ~ else if 문 구조) -->
			<!-- 1. 검색어(keyword)가 널스트링이 아닐 때 검색 수행 -->
			<if test="!keyword.equals('')">
				<!-- 2. 검색타입(search)에 따른 WHERE 변경 -->
				<choose>
					<when test="searchType.equals('subject')">
						AND board_subject LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('content')">
						AND board_content LIKE '%${keyword}%' 
					</when>
					<when test="searchType.equals('id')">
						AND board_id LIKE '%${keyword}%'
					</when>
				</choose>
			</if>
	</select>
	
	<!-- 후기 게시글 목록 -->
	<select id="selectReviewList" resultType="com.itwillbs.Code_Green.vo.BoardVO">
		SELECT * 
		  FROM board
		 WHERE board_type='후기'
			<if test="!keyword.equals('')">
			<!-- 2. 검색타입(search)에 따른 WHERE 변경 -->
			<choose>
				<when test="searchType.equals('subject')">
					AND board_subject LIKE '%${keyword}%'
				</when>
				<when test="searchType.equals('content')">
					AND board_content LIKE '%${keyword}%' 
				</when>
				<when test="searchType.equals('id')">
					AND board_id LIKE '%${keyword}%'
				</when>
			</choose>
			</if>
		ORDER BY board_idx DESC
		LIMIT #{startRow}, #{listLimit}
	</select>
	
	<!-- 후기 상세조회 -->
	<select id="selectReviewDetail" resultType="com.itwillbs.Code_Green.vo.BoardVO">
		SELECT
				f.file1
			,	f.file2
			,	f.file3
			,	b.board_idx
			,	b.board_item_idx
			,	b.board_type
			,	b.board_id
			,	b.board_subject
			,	b.board_content
			,	b.board_date
			,	i.item_idx
			,	i.item_name
			,	i.item_category
			,	m.manager_idx
			,	m.manager_brandname
		 FROM	file_board f
		RIGHT JOIN board b
		   ON	f.rf_board_idx = b.board_idx
		 LEFT JOIN item i
		   ON	b.board_item_idx = i.item_idx
		 LEFT JOIN	manager m
		   ON	i.re_manager_idx = m.manager_idx
		WHERE	b.board_idx=#{board_idx }
	</select>
	
	<!-- ==레시피 == 레시피== ==레시피 == 레시피== ==레시피 == 레시피== ==레시피 == 레시피== -->
	
	<!-- 레시피 목록 갯수 조회 -->
	<select id="selectRecipeListCount" resultType="Integer">
		SELECT COUNT(*)
		  FROM board b 
		 INNER JOIN manager m
		 	ON b.board_id = m.manager_id
		 WHERE board_type='레시피'
		<if test="!keyword.equals('')">
				<!-- 2. 검색타입(search)에 따른 WHERE 변경 -->
				<choose>
					<when test="searchType.equals('subject')">
						AND board_subject LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('id')">
						AND board_id LIKE '%${keyword}%' 
					</when>
				</choose>
			</if>
	</select>
	
	
	<!-- 레시피 목록 조회 -->
	<select id="selectRecipeList" resultType="com.itwillbs.Code_Green.vo.BoardVO">
		SELECT
				b.board_idx
			,	b.board_type
			,	b.board_subject
			,	b.board_readcount
			,	b.board_date
			,	m.manager_brandname
		  FROM	board b 
		 INNER JOIN manager m
			ON	b.board_id = m.manager_id
		 WHERE	board_type='레시피'
		<if test="!keyword.equals('')">
				<!-- 2. 검색타입(search)에 따른 WHERE 변경 -->
				<choose>
					<when test="searchType.equals('subject')">
						AND board_subject LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('id')">
						AND board_id LIKE '%${keyword}%' 
					</when>
				</choose>
			</if>
	 ORDER BY board_idx DESC
	 LIMIT #{startRow}, #{listLimit}
	</select>
	
	<!-- 레시피 상세 조회 -->
	<select id="selectRecipeDetail" resultType="com.itwillbs.Code_Green.vo.BoardVO">
		SELECT
				f.file1
			,	f.file2
			,	f.file3
			,	b.board_idx
			,	b.board_subject
			,	b.board_content
			,	b.board_readcount
			,	b.board_date
			,	m.manager_brandname
		  FROM
		  		file_board f 
		 RIGHT JOIN board b
			ON
				f.rf_board_idx = b.board_idx
		 INNER JOIN manager m
			ON 
				b.board_id = m.manager_id
		 WHERE
		 		b.board_idx=#{board_idx }
	</select>
	
	<!-- 게시글 삭제 -->
	<delete id="deleteBoard">
		DELETE 
		  FROM board
		 WHERE board_idx=#{board_idx }
	</delete>
	
	
<!-- ==신고글 관리====신고글 관리====신고글 관리====신고글 관리====신고글 관리====신고글 관리====신고글 관리====신고글 관리====신고글 관리====신고글 관리====신고글 관리====신고글 관리== -->
	
	
	<!-- 신고글(처리대기) 갯수 조회 -->
	<select id="selectReportListCount" resultType="Integer">
		SELECT COUNT(*) 
		  FROM report
		 WHERE report_status='처리대기'
				<if test="!keyword.equals('')">
				<!-- 2. 검색타입(search)에 따른 WHERE 변경 -->
				<choose>
					<when test="searchType.equals('id')">
						AND reporter LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('content')">
						AND report_content LIKE '%${keyword}%' 
					</when>
				</choose>
				</if>
		 ORDER BY 
			  report_idx DESC
	</select>
	
	
	<!-- 신고글 목록(처리대기) -->
	<select id="selectReportList" resultType="com.itwillbs.Code_Green.vo.ReportVO">
		SELECT *
		  FROM report
		 WHERE report_status='처리대기'
				<if test="!keyword.equals('')">
				<!-- 2. 검색타입(search)에 따른 WHERE 변경 -->
				<choose>
					<when test="searchType.equals('id')">
						AND reporter LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('content')">
						AND report_content LIKE '%${keyword}%' 
					</when>
				</choose>
				</if>
		 ORDER BY 
				report_idx DESC
	 	 LIMIT #{startRow}, #{listLimit}
	</select>
	
	<!-- 신고글(처리완료) 갯수 조회 -->
	<select id="selectReportSuccessListCount" resultType="Integer">
		SELECT COUNT(*) 
		  FROM report
		 WHERE report_status='처리완료'
				<if test="!keyword.equals('')">
				<!-- 2. 검색타입(search)에 따른 WHERE 변경 -->
				<choose>
					<when test="searchType.equals('id')">
						AND reporter LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('content')">
						AND report_content LIKE '%${keyword}%' 
					</when>
				</choose>
				</if>
		 ORDER BY 
			  report_idx DESC
	</select>
	
	
	<!-- 신고글 목록(처리완료) -->	
	<select id="selectReportSuccessList" resultType="com.itwillbs.Code_Green.vo.ReportVO">
		SELECT * 
		  FROM report
		 WHERE report_status='처리완료'
				<if test="!keyword.equals('')">
				<!-- 2. 검색타입(search)에 따른 WHERE 변경 -->
				<choose>
					<when test="searchType.equals('id')">
						AND reporter LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('content')">
						AND report_content LIKE '%${keyword}%' 
					</when>
				</choose>
				</if>
		 ORDER BY 
				report_idx DESC
		 LIMIT #{startRow}, #{listLimit}
	</select>
	
	<!-- 신고글 상세조회 -->
	<select id="selectReportInfo" resultType="com.itwillbs.Code_Green.vo.ReportVO">
		SELECT *
		  FROM report
		 WHERE
		 	   report_idx=#{report_idx}
	</select>
	
	<!-- 신고된 원본글 조회! -->
	<select id="selectOriginBoard" resultType="com.itwillbs.Code_Green.vo.BoardVO">
		SELECT *
		  FROM board b 
		  JOIN report r
			ON 
				b.board_idx = r.board_idx 
		 WHERE
				r.report_idx=#{report_idx}
	</select>
	
	<!-- 신고글 삭제 -->
	<delete id="deleteReport">
		DELETE
		  FROM report
		 WHERE report_idx=#{report_idx}
	</delete>

	<!-- 신고글 상태처리 -->
	<update id="updateReportStatus">
		UPDATE  report
		   SET	report_status = '처리완료'
		 WHERE	board_idx=#{board_idx}
	</update>
	
	<!-- 신고글 상태처리(처리반려) -->
	<update id="updateReportReturn">
		UPDATE report
		   SET
			   report_status= '처리반려'
		 WHERE
			   report_idx=#{report_idx} 
			
	</update>
	
	
	
	<!-- ==공지 관리====공지 관리====공지 관리====공지 관리====공지 관리====공지 관리====공지 관리====공지 관리====공지 관리====공지 관리====공지 관리====공지 관리====공지 관리== -->
	
	
	
	<!-- 공지 갯수 -->
	<select id="selectNoticeListCount" resultType="integer">
		SELECT COUNT(*)
		  FROM board
		 WHERE board_category='공지'
	</select>
	
	<!-- 공지 목록 -->
	<select id="selectNoticeList" resultType="com.itwillbs.Code_Green.vo.BoardVO">
		SELECT *
		  FROM board
		 WHERE board_category='공지'
		 ORDER BY
			   board_idx DESC
	</select>
	
	
	<!-- 공지 상세조회 -->
	<select id="selectNoticeDetail" resultType="com.itwillbs.Code_Green.vo.BoardVO">
		SELECT *
		  FROM board
		 WHERE board_idx = #{board_idx}
	</select>
	
	<!-- 공지 등록 -->
	<insert id="insertNotice">
		<selectKey keyProperty="board_idx" resultType="integer" order="BEFORE">
			SELECT MAX(board_idx) FROM board
		</selectKey>
			INSERT INTO board values(
				#{board_idx} + 1,
				"0",
				"커뮤",
				#{board_id},
				"공지",
				#{board_subject},
				#{board_content},
				"0",
				date_format(now(),'%Y%m%d')
				)
	</insert>
	
	
	<!-- 공지 수정 -->
	<update id="updateNotice">
		UPDATE board
		   SET
				board_subject=#{board_subject},
				board_content=#{board_content}
		 WHERE
				board_idx=#{board_idx}
	</update>

	<!-- 공지 삭제 -->
	<delete id="deleteNotice">
		DELETE
		  FROM board
		 WHERE board_idx=#{board_idx}
	</delete>


</mapper>

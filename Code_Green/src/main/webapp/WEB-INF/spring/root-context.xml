<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->

   <!-- 이메일 인증 관련 빈 등록 -->
   <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
      <property name="host" value="smtp.gmail.com" />
      <property name="port" value="587" />
      <property name="username" value="CodeGreen@gmail.com" />
      <property name="password" value="kuhmyfixchczkmiu" />
      <property name="javaMailProperties">
         <props>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">true</prop>
                <!-- gmail의 경우 보안문제 업데이트로 인해 SSLSocketFactory를 추가해야 smtp 사용 가능. -->
                <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.debug">true</prop>
                <prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
				<prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
            </props>
      </property>
   </bean>




<!-- 		1027추가 -->
<!-- 	hikariCP라이브러리 사용을 위한 설정 -->
<!-- hikariCP를 활용한 디비 접속 정보 설정을 위해 HikariConfig 객체 설정 (JDBC 기본 설정)		 -->
		<bean id = "hikariConfig" class="com.zaxxer.hikari.HikariConfig">
			<property name ="driverClassName" value="com.mysql.cj.jdbc.Driver"></property>
<!-- 			새 프젝시 여기 수정해주기 -->
			<property name="jdbcUrl" value="jdbc:mysql://db.itwillbs.dev:3306/class3_220630_team2"></property> 
			<property name="username" value="class3_220630_team2"></property>
			<property name="password" value="1234"></property>
		</bean>
		
<!-- 		hikariCP의 DataSource 객체 생성을 위해 HikariConfig 객체 전달 -->
		<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
			<constructor-arg ref="hikariConfig"></constructor-arg>
		</bean>
		
<!-- 		Connetction객체 생성 및 SQL구문 전달, 결과 리턴 등의 작업을 수행할 SQLSessionFactory객체 설정 -->
<!-- MyBatis - spring 연결을 담당하며, 내부적으로 SQLSession 객체를 통해 작업 수행 -->
<!-- 이전에 이미 DataSource객체 설정이 완료되어 있어야함 -->
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="dataSource"></property>
			<property name="configLocation" value="classpath:/mybatis-config.xml"></property>
			<property name="mapperLocations" value="classpath:/com/itwillbs/Code_Green/mapper/*Mapper.xml"></property>
		</bean>
		
<!-- 		마이바티스 연동에 사용될 객체들의 패키지 위치 지정 (기본루트 패키지 지정) -->
		<mybatis-spring:scan base-package="com.itwillbs.Code_Green"/>
<!-- 		1027추가 끝 -->


</beans>
